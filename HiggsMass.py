
import numpy as np


def HiggsSelfEnergy(lam, cH, cHbox, cHDD, ScaleMu):
    mH2 = 121248.23287437392 * lam -3.675283493789601e9 * (3 * cH -4 * cHbox * lam + cHDD * lam)
    result = (complex(0., -1.287567992950274e-8) * (1.0803096856715288e17 * lam -4.383512972282733e16 * (lam ** 2) + 3.804360569448481e10 * (np.emath.sqrt(-25706.9674924441 + mH2)) * (np.emath.sqrt(mH2)) + 1.1284168096322153e12 * (lam ** 2) * (np.emath.sqrt(-25706.9674924441 + mH2)) * (np.emath.sqrt(mH2)) -8.454748165607601e11 * mH2 + 1.2051070404257681e11 * lam * mH2 + complex(1.3474346156108516e12, 6.443385497852988e11) * (lam ** 2) * mH2 + complex(0., -1.3199104646644152e6) * (np.emath.sqrt(33459.72639999999 -mH2)) * (mH2 ** 1.5) + complex(0., 5.075735399006206e6) * (np.emath.sqrt(114244 -mH2)) * (mH2 ** 1.5) -1.9731929721992945e6 * (np.emath.sqrt(-25706.9674924441 + mH2)) * (mH2 ** 1.5) + 1.8996959914166136e6 * (mH2 ** 2) + 3.9480037756859045e6 * lam * (mH2 ** 2) + complex(0., 3.3122882265126137e10) * (np.emath.sqrt((33459.72639999999 -1. * mH2) * mH2)) + complex(0., 5.79926456787918e11) * (lam ** 2) * (np.emath.sqrt((33459.72639999999 -1. * mH2) * mH2)) + complex(0., -5.798723149240651e11) * (np.emath.sqrt(-((-114244 + mH2) * mH2))) + (np.emath.sqrt(-25706.9674924441 + mH2)) * (np.emath.sqrt(mH2)) * (-4.0209404179464145e9 -1.192656867116592e11 * (lam ** 2) + 208552.56039713832 * mH2) * np.emath.log(12853.483746222051 + (np.emath.sqrt(-25706.9674924441 + mH2)) * (np.emath.sqrt(mH2)) -mH2) + lam * mH2 * (complex(0., 9.29584030428837e11) * lam + 1.4754732982611528e6 * mH2) * np.emath.log(mH2) + complex(0., -9.29584030428837e11) * (lam ** 2) * mH2 * np.emath.log(mH2 + complex(0, 1) * (np.emath.sqrt(3)) * mH2) + complex(0., -463412.8610660451) * (np.emath.sqrt(114244 -mH2)) * (mH2 ** 1.5) * np.emath.log(57122 -mH2 + complex(0, 1) * (np.emath.sqrt(-((-114244 + mH2) * mH2)))) + complex(0., 5.294213889962926e10) * (np.emath.sqrt(-((-114244 + mH2) * mH2))) * np.emath.log(57122 -mH2 + complex(0, 1) * (np.emath.sqrt(-((-114244 + mH2) * mH2)))) + complex(0., 135724.13029577988) * (np.emath.sqrt(33459.72639999999 -mH2)) * (mH2 ** 1.5) * np.emath.log(16729.863199999996 -mH2 + complex(0, 1) * (np.emath.sqrt(-1. * (-33459.72639999999 + mH2) * mH2))) + complex(0., -3.405969199181058e9) * (np.emath.sqrt((33459.72639999999 -1. * mH2) * mH2)) * np.emath.log(16729.863199999996 -mH2 + complex(0, 1) * (np.emath.sqrt(-1. * (-33459.72639999999 + mH2) * mH2))) + complex(0., -5.96328433558296e10) * (lam ** 2) * (np.emath.sqrt((33459.72639999999 -1. * mH2) * mH2)) * np.emath.log(16729.863199999996 -mH2 + complex(0, 1) * (np.emath.sqrt(-1. * (-33459.72639999999 + mH2) * mH2))) -1.6555923358125892e16 * lam * np.emath.log(ScaleMu) + 7.591886631601142e15 * (lam ** 2) * np.emath.log(ScaleMu) + 1.3654568784750536e11 * mH2 * np.emath.log(ScaleMu) -2.0871470183176872e10 * lam * mH2 * np.emath.log(ScaleMu) -3.577970601349776e11 * (lam ** 2) * mH2 * np.emath.log(ScaleMu) -238272.34074625385 * (mH2 ** 2) * np.emath.log(ScaleMu) -2.9509465965223056e6 * lam * (mH2 ** 2) * np.emath.log(ScaleMu)) + complex(0., -1.287567992950274e-8) * (-3.2205486548013285e21 * cH + 2.4630392737568255e21 * cH * lam + 5.152877847682126e21 * cHbox * lam -1.4304836684811036e21 * cHDD * lam -2.4630392737568255e21 * cHbox * (lam ** 2) + 6.157686280842809e20 * cHDD * (lam ** 2) -7.617758261399145e15 * cH * mH2 -1.5644557163823795e15 * cHbox * mH2 + 2.4053051215995595e15 * cHDD * mH2 + 1.0815997704937003e17 * cH * lam * mH2 -3.385670338399621e15 * cHbox * lam * mH2 -1.3242462474608795e15 * cHDD * lam * mH2 -1.5887117390427094e17 * cHbox * (lam ** 2) * mH2 + 3.971762271058304e16 * cHDD * (lam ** 2) * mH2 -1.7950818044372695e12 * cH * (mH2 ** 2) + 2.4206352452716324e10 * cHbox * (mH2 ** 2) -3.2237968085359776e10 * cHDD * (mH2 ** 2) + 3.3556965712928086e12 * cHbox * lam * (mH2 ** 2) -7.389941591179413e11 * cHDD * lam * (mH2 ** 2) + 5.264005034247872e6 * cHbox * (mH2 ** 3) -1.316001258561968e6 * cHDD * (mH2 ** 3) + ((cHDD * (mH2 ** 2) * (-9.866697400801948e13 -7.676282629370428e9 * (np.emath.sqrt(-25706.9674924441 + mH2)) * (np.emath.sqrt(mH2)) + 1.1514423944055643e10 * mH2 + 298607.0850879892 * (np.emath.sqrt(-25706.9674924441 + mH2)) * (mH2 ** 1.5) -298607.0850879892 * (mH2 ** 2))) / (-12853.483746222051 -1. * (np.emath.sqrt(-25706.9674924441 + mH2)) * (np.emath.sqrt(mH2)) + mH2)) / (-25706.9674924441 + mH2) + ((1.7076548469205252e11 * cHDD * (lam ** 2) * mH2 * (3.3042408882878894e8 + 25706.9674924441 * (np.emath.sqrt(-25706.9674924441 + mH2)) * (np.emath.sqrt(mH2)) -38560.45123866615 * mH2 -1. * (np.emath.sqrt(-25706.9674924441 + mH2)) * (mH2 ** 1.5) + 1. * (mH2 ** 2))) / (-12853.483746222051 -1. * (np.emath.sqrt(-25706.9674924441 + mH2)) * (np.emath.sqrt(mH2)) + mH2)) / (-25706.9674924441 + mH2) + ((cHDD * mH2 * (1.9023215200514877e18 + 1.4800046101202916e14 * (np.emath.sqrt(-25706.9674924441 + mH2)) * (np.emath.sqrt(mH2)) -2.2200069151804378e14 * mH2 -5.757211972027821e9 * (np.emath.sqrt(-25706.9674924441 + mH2)) * (mH2 ** 1.5) + 5.757211972027821e9 * (mH2 ** 2))) / (-12853.483746222051 -1. * (np.emath.sqrt(-25706.9674924441 + mH2)) * (np.emath.sqrt(mH2)) + mH2)) / (-25706.9674924441 + mH2) -7.400023050601458e13 * cHDD * (((-25706.9674924441 + mH2) / mH2) ** -0.5) * (-9.461370162235466 + np.emath.log(12853.483746222051 + (np.emath.sqrt(-25706.9674924441 + mH2)) * (np.emath.sqrt(mH2)) -mH2)) -2.1949313819050272e15 * cHDD * (lam ** 2) * (((-25706.9674924441 + mH2) / mH2) ** -0.5) * (-9.461370162235466 + np.emath.log(12853.483746222051 + (np.emath.sqrt(-25706.9674924441 + mH2)) * (np.emath.sqrt(mH2)) -mH2)) -4.875319201691491e14 * cHbox * (np.emath.sqrt(-25706.9674924441 + mH2)) * (np.emath.sqrt(mH2)) * (-9.461370162235466 + np.emath.log(12853.483746222051 + (np.emath.sqrt(-25706.9674924441 + mH2)) * (np.emath.sqrt(mH2)) -mH2)) + 1.2188202050695861e14 * cHDD * (np.emath.sqrt(-25706.9674924441 + mH2)) * (np.emath.sqrt(mH2)) * (-9.461370162235466 + np.emath.log(12853.483746222051 + (np.emath.sqrt(-25706.9674924441 + mH2)) * (np.emath.sqrt(mH2)) -mH2)) + 2.1691130634506064e16 * cH * lam * (np.emath.sqrt(-25706.9674924441 + mH2)) * (np.emath.sqrt(mH2)) * (-9.461370162235466 + np.emath.log(12853.483746222051 + (np.emath.sqrt(-25706.9674924441 + mH2)) * (np.emath.sqrt(mH2)) -mH2)) -1.4460753756337376e16 * cHbox * (lam ** 2) * (np.emath.sqrt(-25706.9674924441 + mH2)) * (np.emath.sqrt(mH2)) * (-9.461370162235466 + np.emath.log(12853.483746222051 + (np.emath.sqrt(-25706.9674924441 + mH2)) * (np.emath.sqrt(mH2)) -mH2)) + 3.615188439084344e15 * cHDD * (lam ** 2) * (np.emath.sqrt(-25706.9674924441 + mH2)) * (np.emath.sqrt(mH2)) * (-9.461370162235466 + np.emath.log(12853.483746222051 + (np.emath.sqrt(-25706.9674924441 + mH2)) * (np.emath.sqrt(mH2)) -mH2)) + 3.838141314685214e9 * cHDD * ((-25706.9674924441 + mH2) ** -0.5) * (mH2 ** 1.5) * (-9.461370162235466 + np.emath.log(12853.483746222051 + (np.emath.sqrt(-25706.9674924441 + mH2)) * (np.emath.sqrt(mH2)) -mH2)) + 2.528662940957915e10 * cHbox * (np.emath.sqrt(-25706.9674924441 + mH2)) * (mH2 ** 1.5) * (-9.461370162235466 + np.emath.log(12853.483746222051 + (np.emath.sqrt(-25706.9674924441 + mH2)) * (np.emath.sqrt(mH2)) -mH2)) -6.321657352394788e9 * cHDD * (np.emath.sqrt(-25706.9674924441 + mH2)) * (mH2 ** 1.5) * (-9.461370162235466 + np.emath.log(12853.483746222051 + (np.emath.sqrt(-25706.9674924441 + mH2)) * (np.emath.sqrt(mH2)) -mH2)) -2.385313734233184e11 * cHbox * lam * (np.emath.sqrt(-25706.9674924441 + mH2)) * (mH2 ** 1.5) * (-9.461370162235466 + np.emath.log(12853.483746222051 + (np.emath.sqrt(-25706.9674924441 + mH2)) * (np.emath.sqrt(mH2)) -mH2)) + 5.96328433558296e10 * cHDD * lam * (np.emath.sqrt(-25706.9674924441 + mH2)) * (mH2 ** 1.5) * (-9.461370162235466 + np.emath.log(12853.483746222051 + (np.emath.sqrt(-25706.9674924441 + mH2)) * (np.emath.sqrt(mH2)) -mH2)) -6.70869487753083e11 * cH * (mH2 ** 2) * np.emath.log(mH2) + 1.9672977310148703e6 * cHbox * (mH2 ** 3) * np.emath.log(mH2) -491824.4327537176 * cHDD * (mH2 ** 3) * np.emath.log(mH2) + complex(0., -2.8177605249433677e17) * cH * lam * mH2 * (np.emath.log(2) + 1. * np.emath.log(mH2) -1. * np.emath.log(mH2 + complex(0, 1) * (np.emath.sqrt(3)) * mH2)) + complex(0., 3.3813126299320416e17) * cHbox * (lam ** 2) * mH2 * (np.emath.log(2) + 1. * np.emath.log(mH2) -1. * np.emath.log(mH2 + complex(0, 1) * (np.emath.sqrt(3)) * mH2)) + complex(0., -8.453281574830104e16) * cHDD * (lam ** 2) * mH2 * (np.emath.log(2) + 1. * np.emath.log(mH2) -1. * np.emath.log(mH2 + complex(0, 1) * (np.emath.sqrt(3)) * mH2)) + complex(0., 1.859168060857674e12) * cHbox * lam * (mH2 ** 2) * (np.emath.log(2) + 1. * np.emath.log(mH2) -1. * np.emath.log(mH2 + complex(0, 1) * (np.emath.sqrt(3)) * mH2)) + complex(0., -4.647920152144185e11) * cHDD * lam * (mH2 ** 2) * (np.emath.log(2) + 1. * np.emath.log(mH2) -1. * np.emath.log(mH2 + complex(0, 1) * (np.emath.sqrt(3)) * mH2)) + complex(0., -5.618799049551572e10) * cHbox * (np.emath.sqrt(114244 -mH2)) * (mH2 ** 1.5) * (-10.952944610406092 + 1. * np.emath.log(57122 -mH2 + complex(0, 1) * (np.emath.sqrt(-((-114244 + mH2) * mH2))))) + complex(0., 1.404699762387893e10) * cHDD * (np.emath.sqrt(114244 -mH2)) * (mH2 ** 1.5) * (-10.952944610406092 + 1. * np.emath.log(57122 -mH2 + complex(0, 1) * (np.emath.sqrt(-((-114244 + mH2) * mH2))))) + complex(0., 6.419140786169697e15) * cHbox * (np.emath.sqrt(-((-114244 + mH2) * mH2))) * (-10.952944610406092 + 1. * np.emath.log(57122 -mH2 + complex(0, 1) * (np.emath.sqrt(-((-114244 + mH2) * mH2))))) + complex(0., -1.6047851965424242e15) * cHDD * (np.emath.sqrt(-((-114244 + mH2) * mH2))) * (-10.952944610406092 + 1. * np.emath.log(57122 -mH2 + complex(0, 1) * (np.emath.sqrt(-((-114244 + mH2) * mH2))))) + complex(0., 1.6456310956774582e10) * cHbox * (np.emath.sqrt(33459.72639999999 -mH2)) * (mH2 ** 1.5) * (-9.724950617019763 + np.emath.log(16729.863199999996 -mH2 + complex(0, 1) * (np.emath.sqrt(-1. * (-33459.72639999999 + mH2) * mH2)))) + complex(0., 8.228155478387291e9) * cHDD * (np.emath.sqrt(33459.72639999999 -mH2)) * (mH2 ** 1.5) * (-9.724950617019763 + np.emath.log(16729.863199999996 -mH2 + complex(0, 1) * (np.emath.sqrt(-1. * (-33459.72639999999 + mH2) * mH2)))) + complex(0., -1.192656867116592e11) * cHbox * lam * (np.emath.sqrt(33459.72639999999 -mH2)) * (mH2 ** 1.5) * (-9.724950617019763 + np.emath.log(16729.863199999996 -mH2 + complex(0, 1) * (np.emath.sqrt(-1. * (-33459.72639999999 + mH2) * mH2)))) + complex(0., -2.98164216779148e10) * cHDD * lam * (np.emath.sqrt(33459.72639999999 -mH2)) * (mH2 ** 1.5) * (-9.724950617019763 + np.emath.log(16729.863199999996 -mH2 + complex(0, 1) * (np.emath.sqrt(-1. * (-33459.72639999999 + mH2) * mH2)))) + complex(0., -4.129677466252496e14) * cHbox * (np.emath.sqrt(-1. * (-33459.72639999999 + mH2) * mH2)) * (-9.724950617019763 + np.emath.log(16729.863199999996 -mH2 + complex(0, 1) * (np.emath.sqrt(-1. * (-33459.72639999999 + mH2) * mH2)))) + complex(0., -3.441397888543747e14) * cHDD * (np.emath.sqrt(-1. * (-33459.72639999999 + mH2) * mH2)) * (-9.724950617019763 + np.emath.log(16729.863199999996 -mH2 + complex(0, 1) * (np.emath.sqrt(-1. * (-33459.72639999999 + mH2) * mH2)))) + complex(0., 1.0845565317253032e16) * cH * lam * (np.emath.sqrt(-1. * (-33459.72639999999 + mH2) * mH2)) * (-9.724950617019763 + np.emath.log(16729.863199999996 -mH2 + complex(0, 1) * (np.emath.sqrt(-1. * (-33459.72639999999 + mH2) * mH2)))) + complex(0., 4.98824655785029e14) * cHDD * lam * (np.emath.sqrt(-1. * (-33459.72639999999 + mH2) * mH2)) * (-9.724950617019763 + np.emath.log(16729.863199999996 -mH2 + complex(0, 1) * (np.emath.sqrt(-1. * (-33459.72639999999 + mH2) * mH2)))) + complex(0., -7.230376878168688e15) * cHbox * (lam ** 2) * (np.emath.sqrt(-1. * (-33459.72639999999 + mH2) * mH2)) * (-9.724950617019763 + np.emath.log(16729.863199999996 -mH2 + complex(0, 1) * (np.emath.sqrt(-1. * (-33459.72639999999 + mH2) * mH2)))) + complex(0., 1.807594219542172e15) * cHDD * (lam ** 2) * (np.emath.sqrt(-1. * (-33459.72639999999 + mH2) * mH2)) * (-9.724950617019763 + np.emath.log(16729.863199999996 -mH2 + complex(0, 1) * (np.emath.sqrt(-1. * (-33459.72639999999 + mH2) * mH2)))) + cHbox * lam * (2.3955892712013423e22 -4.6698568613693694e21 * np.emath.log(ScaleMu)) + cHDD * mH2 * (8.232385517470554e15 -1.6047851965424242e15 * np.emath.log(ScaleMu)) + 1.4311882405399104e12 * cHbox * lam * (mH2 ** 2) * (np.emath.log(mH2) -2. * np.emath.log(ScaleMu)) -3.577970601349776e11 * cHDD * lam * (mH2 ** 2) * (np.emath.log(mH2) -2. * np.emath.log(ScaleMu)) + 1.1237598099103143e11 * cHbox * (mH2 ** 2) * (np.emath.log(169) -1. * np.emath.log(ScaleMu)) -2.809399524775786e10 * cHDD * (mH2 ** 2) * (np.emath.log(169) -1. * np.emath.log(ScaleMu)) -2.0941553336746868e15 * cHDD * lam * (-4.8841114908377605 + np.emath.log(ScaleMu)) -6.584794145715079e15 * cHDD * (lam ** 2) * (-4.8841114908377605 + np.emath.log(ScaleMu)) + 3.8381413146852126e9 * cHDD * mH2 * (-4.8841114908377605 + np.emath.log(ScaleMu)) + 1.810279069534324e10 * cHDD * lam * mH2 * (-4.8841114908377605 + np.emath.log(ScaleMu)) -1.8776853567158895e20 * cH * (-4.515901718229909 + np.emath.log(ScaleMu)) -7.257792963372312e20 * cH * lam * (-4.515901718229909 + np.emath.log(ScaleMu)) + 3.004296570745424e20 * cHbox * lam * (-4.515901718229909 + np.emath.log(ScaleMu)) + 1.2517902378105932e19 * cHDD * lam * (-4.515901718229909 + np.emath.log(ScaleMu)) + 7.257792963372312e20 * cHbox * (lam ** 2) * (-4.515901718229909 + np.emath.log(ScaleMu)) -1.814448240843078e20 * cHDD * (lam ** 2) * (-4.515901718229909 + np.emath.log(ScaleMu)) + 2.2447109510326302e15 * cH * mH2 * (-4.515901718229909 + np.emath.log(ScaleMu)) -4.129677466252495e14 * cHbox * mH2 * (-4.515901718229909 + np.emath.log(ScaleMu)) -1.376559155417499e15 * cHDD * mH2 * (-4.515901718229909 + np.emath.log(ScaleMu)) + 2.1691130634506064e16 * cH * lam * mH2 * (-4.515901718229909 + np.emath.log(ScaleMu)) + 9.97649311570058e14 * cHbox * lam * mH2 * (-4.515901718229909 + np.emath.log(ScaleMu)) + 1.7458862952476015e15 * cHDD * lam * mH2 * (-4.515901718229909 + np.emath.log(ScaleMu)) -1.4460753756337376e16 * cHbox * (lam ** 2) * mH2 * (-4.515901718229909 + np.emath.log(ScaleMu)) + 3.615188439084344e15 * cHDD * (lam ** 2) * mH2 * (-4.515901718229909 + np.emath.log(ScaleMu)) + 3.2912621913549164e10 * cHbox * (mH2 ** 2) * (-4.515901718229909 + np.emath.log(ScaleMu)) + 2.0570388695968227e10 * cHDD * (mH2 ** 2) * (-4.515901718229909 + np.emath.log(ScaleMu)) -2.385313734233184e11 * cHbox * lam * (mH2 ** 2) * (-4.515901718229909 + np.emath.log(ScaleMu)) -5.96328433558296e10 * cHDD * lam * (mH2 ** 2) * (-4.515901718229909 + np.emath.log(ScaleMu)) -2.2167143921384872e20 * cH * (-4.3841114908377605 + np.emath.log(ScaleMu)) -1.1152263801912116e21 * cH * lam * (-4.3841114908377605 + np.emath.log(ScaleMu)) + 3.5467430274215805e20 * cHbox * lam * (-4.3841114908377605 + np.emath.log(ScaleMu)) -8.866857568553951e19 * cHDD * lam * (-4.3841114908377605 + np.emath.log(ScaleMu)) + 1.1152263801912116e21 * cHbox * (lam ** 2) * (-4.3841114908377605 + np.emath.log(ScaleMu)) -2.788065950478029e20 * cHDD * (lam ** 2) * (-4.3841114908377605 + np.emath.log(ScaleMu)) + 3.4492040226682265e15 * cH * mH2 * (-4.3841114908377605 + np.emath.log(ScaleMu)) -4.87531920169149e14 * cHbox * mH2 * (-4.3841114908377605 + np.emath.log(ScaleMu)) + 1.2188298004228725e14 * cHDD * mH2 * (-4.3841114908377605 + np.emath.log(ScaleMu)) + 4.338226126901213e16 * cH * lam * mH2 * (-4.3841114908377605 + np.emath.log(ScaleMu)) + 1.5329795656303228e15 * cHbox * lam * mH2 * (-4.3841114908377605 + np.emath.log(ScaleMu)) -3.832448914075807e14 * cHDD * lam * mH2 * (-4.3841114908377605 + np.emath.log(ScaleMu)) -2.892150751267475e16 * cHbox * (lam ** 2) * mH2 * (-4.3841114908377605 + np.emath.log(ScaleMu)) + 7.230376878168688e15 * cHDD * (lam ** 2) * mH2 * (-4.3841114908377605 + np.emath.log(ScaleMu)) + 5.05732588191583e10 * cHbox * (mH2 ** 2) * (-4.3841114908377605 + np.emath.log(ScaleMu)) -1.2643314704789576e10 * cHDD * (mH2 ** 2) * (-4.3841114908377605 + np.emath.log(ScaleMu)) -4.770627468466368e11 * cHbox * lam * (mH2 ** 2) * (-4.3841114908377605 + np.emath.log(ScaleMu)) + 1.192656867116592e11 * cHDD * lam * (mH2 ** 2) * (-4.3841114908377605 + np.emath.log(ScaleMu)) + 1.341738975506166e12 * cH * (mH2 ** 2) * np.emath.log(ScaleMu) -3.9345954620297407e6 * cHbox * (mH2 ** 3) * np.emath.log(ScaleMu) + 983648.8655074352 * cHDD * (mH2 ** 3) * np.emath.log(ScaleMu) + cHbox * mH2 * (-3.2929542069882216e16 + 6.419140786169697e15 * np.emath.log(ScaleMu)) + cHDD * lam * (-5.988973178003356e21 + 1.1674642153423423e21 * np.emath.log(ScaleMu)) + cH * (-1.4972432945008393e22 + 2.9186605383558564e21 * np.emath.log(ScaleMu)))) / mH2

    return result

def OneLoopHiggsMassSq(lam, cH, cHbox, cHDD, ScaleMu):

    # Convert parameters to float
    lam = float(lam)
    cH = float(cH)
    cHbox = float(cHbox)
    cHDD = float(cHDD)
    ScaleMu = float(ScaleMu)

    minusImSE = -HiggsSelfEnergy(lam, cH, cHbox, cHDD, ScaleMu).imag
   
    MHiggsTLSq = 121248.23287437392 * lam -3.675283493789601e9 * (3 * cH -4 * cHbox * lam + cHDD * lam)
    
    if MHiggsTLSq < 80**2:
        loopmasssq = np.nan
    else:
        loopmasssq = MHiggsTLSq + minusImSE
    return loopmasssq

def TLHiggsMassSq(lam, cH, cHbox, cHDD, ScaleMu):
    MHiggsTLSq = 121248.23287437392 * lam -3.675283493789601e9 * (3 * cH -4 * cHbox * lam + cHDD * lam)
    
    return MHiggsTLSq